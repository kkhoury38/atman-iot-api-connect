# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.request_data_logger_setup_csv2_data_header_location_keys_array import RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray
from openapi_server.models.request_data_logger_setup_csv2_data_header_location_keys_number import RequestDataLoggerSetupCsv2DataHeaderLocationKeysNumber
from openapi_server.models.request_data_logger_setup_csv2_data_header_location_keys_str_array import RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray
from openapi_server import util

from openapi_server.models.request_data_logger_setup_csv2_data_header_location_keys_array import RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray  # noqa: E501
from openapi_server.models.request_data_logger_setup_csv2_data_header_location_keys_number import RequestDataLoggerSetupCsv2DataHeaderLocationKeysNumber  # noqa: E501
from openapi_server.models.request_data_logger_setup_csv2_data_header_location_keys_str_array import RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray  # noqa: E501

class RequestDataLoggerSetupCsv2DataHeaderLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_item_col=None, next_item_iteration=None, model=None, serial_no=None, channel_name=None, channel_unit=None, period=None):  # noqa: E501
        """RequestDataLoggerSetupCsv2DataHeaderLocation - a model defined in OpenAPI

        :param first_item_col: The first_item_col of this RequestDataLoggerSetupCsv2DataHeaderLocation.  # noqa: E501
        :type first_item_col: float
        :param next_item_iteration: The next_item_iteration of this RequestDataLoggerSetupCsv2DataHeaderLocation.  # noqa: E501
        :type next_item_iteration: float
        :param model: The model of this RequestDataLoggerSetupCsv2DataHeaderLocation.  # noqa: E501
        :type model: RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray
        :param serial_no: The serial_no of this RequestDataLoggerSetupCsv2DataHeaderLocation.  # noqa: E501
        :type serial_no: RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray
        :param channel_name: The channel_name of this RequestDataLoggerSetupCsv2DataHeaderLocation.  # noqa: E501
        :type channel_name: RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray
        :param channel_unit: The channel_unit of this RequestDataLoggerSetupCsv2DataHeaderLocation.  # noqa: E501
        :type channel_unit: RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray
        :param period: The period of this RequestDataLoggerSetupCsv2DataHeaderLocation.  # noqa: E501
        :type period: RequestDataLoggerSetupCsv2DataHeaderLocationKeysNumber
        """
        self.openapi_types = {
            'first_item_col': float,
            'next_item_iteration': float,
            'model': RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray,
            'serial_no': RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray,
            'channel_name': RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray,
            'channel_unit': RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray,
            'period': RequestDataLoggerSetupCsv2DataHeaderLocationKeysNumber
        }

        self.attribute_map = {
            'first_item_col': 'firstItemCol',
            'next_item_iteration': 'nextItemIteration',
            'model': 'model',
            'serial_no': 'serialNo',
            'channel_name': 'channelName',
            'channel_unit': 'channelUnit',
            'period': 'period'
        }

        self._first_item_col = first_item_col
        self._next_item_iteration = next_item_iteration
        self._model = model
        self._serial_no = serial_no
        self._channel_name = channel_name
        self._channel_unit = channel_unit
        self._period = period

    @classmethod
    def from_dict(cls, dikt) -> 'RequestDataLoggerSetupCsv2DataHeaderLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestDataLoggerSetupCsv2DataHeaderLocation of this RequestDataLoggerSetupCsv2DataHeaderLocation.  # noqa: E501
        :rtype: RequestDataLoggerSetupCsv2DataHeaderLocation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_item_col(self):
        """Gets the first_item_col of this RequestDataLoggerSetupCsv2DataHeaderLocation.

        First column of header  # noqa: E501

        :return: The first_item_col of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :rtype: float
        """
        return self._first_item_col

    @first_item_col.setter
    def first_item_col(self, first_item_col):
        """Sets the first_item_col of this RequestDataLoggerSetupCsv2DataHeaderLocation.

        First column of header  # noqa: E501

        :param first_item_col: The first_item_col of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :type first_item_col: float
        """
        if first_item_col is None:
            raise ValueError("Invalid value for `first_item_col`, must not be `None`")  # noqa: E501

        self._first_item_col = first_item_col

    @property
    def next_item_iteration(self):
        """Gets the next_item_iteration of this RequestDataLoggerSetupCsv2DataHeaderLocation.

        Relevant row location of next item  # noqa: E501

        :return: The next_item_iteration of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :rtype: float
        """
        return self._next_item_iteration

    @next_item_iteration.setter
    def next_item_iteration(self, next_item_iteration):
        """Sets the next_item_iteration of this RequestDataLoggerSetupCsv2DataHeaderLocation.

        Relevant row location of next item  # noqa: E501

        :param next_item_iteration: The next_item_iteration of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :type next_item_iteration: float
        """
        if next_item_iteration is None:
            raise ValueError("Invalid value for `next_item_iteration`, must not be `None`")  # noqa: E501

        self._next_item_iteration = next_item_iteration

    @property
    def model(self):
        """Gets the model of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :return: The model of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :rtype: RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :param model: The model of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :type model: RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray
        """
        if model is None:
            raise ValueError("Invalid value for `model`, must not be `None`")  # noqa: E501

        self._model = model

    @property
    def serial_no(self):
        """Gets the serial_no of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :return: The serial_no of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :rtype: RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray
        """
        return self._serial_no

    @serial_no.setter
    def serial_no(self, serial_no):
        """Sets the serial_no of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :param serial_no: The serial_no of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :type serial_no: RequestDataLoggerSetupCsv2DataHeaderLocationKeysArray
        """
        if serial_no is None:
            raise ValueError("Invalid value for `serial_no`, must not be `None`")  # noqa: E501

        self._serial_no = serial_no

    @property
    def channel_name(self):
        """Gets the channel_name of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :return: The channel_name of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :rtype: RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray
        """
        return self._channel_name

    @channel_name.setter
    def channel_name(self, channel_name):
        """Sets the channel_name of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :param channel_name: The channel_name of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :type channel_name: RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray
        """
        if channel_name is None:
            raise ValueError("Invalid value for `channel_name`, must not be `None`")  # noqa: E501

        self._channel_name = channel_name

    @property
    def channel_unit(self):
        """Gets the channel_unit of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :return: The channel_unit of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :rtype: RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray
        """
        return self._channel_unit

    @channel_unit.setter
    def channel_unit(self, channel_unit):
        """Sets the channel_unit of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :param channel_unit: The channel_unit of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :type channel_unit: RequestDataLoggerSetupCsv2DataHeaderLocationKeysStrArray
        """
        if channel_unit is None:
            raise ValueError("Invalid value for `channel_unit`, must not be `None`")  # noqa: E501

        self._channel_unit = channel_unit

    @property
    def period(self):
        """Gets the period of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :return: The period of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :rtype: RequestDataLoggerSetupCsv2DataHeaderLocationKeysNumber
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this RequestDataLoggerSetupCsv2DataHeaderLocation.


        :param period: The period of this RequestDataLoggerSetupCsv2DataHeaderLocation.
        :type period: RequestDataLoggerSetupCsv2DataHeaderLocationKeysNumber
        """
        if period is None:
            raise ValueError("Invalid value for `period`, must not be `None`")  # noqa: E501

        self._period = period
