# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, greeting=None, date=None, url=None, headers=None):  # noqa: E501
        """InlineResponse200 - a model defined in OpenAPI

        :param greeting: The greeting of this InlineResponse200.  # noqa: E501
        :type greeting: str
        :param date: The date of this InlineResponse200.  # noqa: E501
        :type date: str
        :param url: The url of this InlineResponse200.  # noqa: E501
        :type url: str
        :param headers: The headers of this InlineResponse200.  # noqa: E501
        :type headers: Dict[str, object]
        """
        self.openapi_types = {
            'greeting': str,
            'date': str,
            'url': str,
            'headers': Dict[str, object]
        }

        self.attribute_map = {
            'greeting': 'greeting',
            'date': 'date',
            'url': 'url',
            'headers': 'headers'
        }

        self._greeting = greeting
        self._date = date
        self._url = url
        self._headers = headers

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def greeting(self):
        """Gets the greeting of this InlineResponse200.


        :return: The greeting of this InlineResponse200.
        :rtype: str
        """
        return self._greeting

    @greeting.setter
    def greeting(self, greeting):
        """Sets the greeting of this InlineResponse200.


        :param greeting: The greeting of this InlineResponse200.
        :type greeting: str
        """

        self._greeting = greeting

    @property
    def date(self):
        """Gets the date of this InlineResponse200.


        :return: The date of this InlineResponse200.
        :rtype: str
        """
        return self._date

    @date.setter
    def date(self, date):
        """Sets the date of this InlineResponse200.


        :param date: The date of this InlineResponse200.
        :type date: str
        """

        self._date = date

    @property
    def url(self):
        """Gets the url of this InlineResponse200.


        :return: The url of this InlineResponse200.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InlineResponse200.


        :param url: The url of this InlineResponse200.
        :type url: str
        """

        self._url = url

    @property
    def headers(self):
        """Gets the headers of this InlineResponse200.


        :return: The headers of this InlineResponse200.
        :rtype: Dict[str, object]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this InlineResponse200.


        :param headers: The headers of this InlineResponse200.
        :type headers: Dict[str, object]
        """

        self._headers = headers
