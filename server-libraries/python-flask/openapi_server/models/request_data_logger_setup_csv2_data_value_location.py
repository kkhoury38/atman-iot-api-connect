# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class RequestDataLoggerSetupCsv2DataValueLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_item_row=None, next_item_iteration=None):  # noqa: E501
        """RequestDataLoggerSetupCsv2DataValueLocation - a model defined in OpenAPI

        :param first_item_row: The first_item_row of this RequestDataLoggerSetupCsv2DataValueLocation.  # noqa: E501
        :type first_item_row: float
        :param next_item_iteration: The next_item_iteration of this RequestDataLoggerSetupCsv2DataValueLocation.  # noqa: E501
        :type next_item_iteration: float
        """
        self.openapi_types = {
            'first_item_row': float,
            'next_item_iteration': float
        }

        self.attribute_map = {
            'first_item_row': 'firstItemRow',
            'next_item_iteration': 'nextItemIteration'
        }

        self._first_item_row = first_item_row
        self._next_item_iteration = next_item_iteration

    @classmethod
    def from_dict(cls, dikt) -> 'RequestDataLoggerSetupCsv2DataValueLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestDataLoggerSetupCsv2DataValueLocation of this RequestDataLoggerSetupCsv2DataValueLocation.  # noqa: E501
        :rtype: RequestDataLoggerSetupCsv2DataValueLocation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_item_row(self):
        """Gets the first_item_row of this RequestDataLoggerSetupCsv2DataValueLocation.

        First row containing a measurement  # noqa: E501

        :return: The first_item_row of this RequestDataLoggerSetupCsv2DataValueLocation.
        :rtype: float
        """
        return self._first_item_row

    @first_item_row.setter
    def first_item_row(self, first_item_row):
        """Sets the first_item_row of this RequestDataLoggerSetupCsv2DataValueLocation.

        First row containing a measurement  # noqa: E501

        :param first_item_row: The first_item_row of this RequestDataLoggerSetupCsv2DataValueLocation.
        :type first_item_row: float
        """
        if first_item_row is None:
            raise ValueError("Invalid value for `first_item_row`, must not be `None`")  # noqa: E501

        self._first_item_row = first_item_row

    @property
    def next_item_iteration(self):
        """Gets the next_item_iteration of this RequestDataLoggerSetupCsv2DataValueLocation.

        Relevant row location of next item  # noqa: E501

        :return: The next_item_iteration of this RequestDataLoggerSetupCsv2DataValueLocation.
        :rtype: float
        """
        return self._next_item_iteration

    @next_item_iteration.setter
    def next_item_iteration(self, next_item_iteration):
        """Sets the next_item_iteration of this RequestDataLoggerSetupCsv2DataValueLocation.

        Relevant row location of next item  # noqa: E501

        :param next_item_iteration: The next_item_iteration of this RequestDataLoggerSetupCsv2DataValueLocation.
        :type next_item_iteration: float
        """
        if next_item_iteration is None:
            raise ValueError("Invalid value for `next_item_iteration`, must not be `None`")  # noqa: E501

        self._next_item_iteration = next_item_iteration
