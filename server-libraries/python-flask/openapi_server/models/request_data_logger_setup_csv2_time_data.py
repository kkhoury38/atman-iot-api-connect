# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.request_data_logger_setup_csv2_location_spec import RequestDataLoggerSetupCsv2LocationSpec
from openapi_server import util

from openapi_server.models.request_data_logger_setup_csv2_location_spec import RequestDataLoggerSetupCsv2LocationSpec  # noqa: E501

class RequestDataLoggerSetupCsv2TimeData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column=None, first_item_row=None, next_item_iteration=None, timezone=None, format=None):  # noqa: E501
        """RequestDataLoggerSetupCsv2TimeData - a model defined in OpenAPI

        :param column: The column of this RequestDataLoggerSetupCsv2TimeData.  # noqa: E501
        :type column: float
        :param first_item_row: The first_item_row of this RequestDataLoggerSetupCsv2TimeData.  # noqa: E501
        :type first_item_row: float
        :param next_item_iteration: The next_item_iteration of this RequestDataLoggerSetupCsv2TimeData.  # noqa: E501
        :type next_item_iteration: float
        :param timezone: The timezone of this RequestDataLoggerSetupCsv2TimeData.  # noqa: E501
        :type timezone: RequestDataLoggerSetupCsv2LocationSpec
        :param format: The format of this RequestDataLoggerSetupCsv2TimeData.  # noqa: E501
        :type format: RequestDataLoggerSetupCsv2LocationSpec
        """
        self.openapi_types = {
            'column': float,
            'first_item_row': float,
            'next_item_iteration': float,
            'timezone': RequestDataLoggerSetupCsv2LocationSpec,
            'format': RequestDataLoggerSetupCsv2LocationSpec
        }

        self.attribute_map = {
            'column': 'column',
            'first_item_row': 'firstItemRow',
            'next_item_iteration': 'nextItemIteration',
            'timezone': 'timezone',
            'format': 'format'
        }

        self._column = column
        self._first_item_row = first_item_row
        self._next_item_iteration = next_item_iteration
        self._timezone = timezone
        self._format = format

    @classmethod
    def from_dict(cls, dikt) -> 'RequestDataLoggerSetupCsv2TimeData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestDataLoggerSetupCsv2TimeData of this RequestDataLoggerSetupCsv2TimeData.  # noqa: E501
        :rtype: RequestDataLoggerSetupCsv2TimeData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column(self):
        """Gets the column of this RequestDataLoggerSetupCsv2TimeData.

        Column containing time data  # noqa: E501

        :return: The column of this RequestDataLoggerSetupCsv2TimeData.
        :rtype: float
        """
        return self._column

    @column.setter
    def column(self, column):
        """Sets the column of this RequestDataLoggerSetupCsv2TimeData.

        Column containing time data  # noqa: E501

        :param column: The column of this RequestDataLoggerSetupCsv2TimeData.
        :type column: float
        """
        if column is None:
            raise ValueError("Invalid value for `column`, must not be `None`")  # noqa: E501

        self._column = column

    @property
    def first_item_row(self):
        """Gets the first_item_row of this RequestDataLoggerSetupCsv2TimeData.

        Row containing first value of time data in the CSV file  # noqa: E501

        :return: The first_item_row of this RequestDataLoggerSetupCsv2TimeData.
        :rtype: float
        """
        return self._first_item_row

    @first_item_row.setter
    def first_item_row(self, first_item_row):
        """Sets the first_item_row of this RequestDataLoggerSetupCsv2TimeData.

        Row containing first value of time data in the CSV file  # noqa: E501

        :param first_item_row: The first_item_row of this RequestDataLoggerSetupCsv2TimeData.
        :type first_item_row: float
        """
        if first_item_row is None:
            raise ValueError("Invalid value for `first_item_row`, must not be `None`")  # noqa: E501

        self._first_item_row = first_item_row

    @property
    def next_item_iteration(self):
        """Gets the next_item_iteration of this RequestDataLoggerSetupCsv2TimeData.

        Relevant row location of next item  # noqa: E501

        :return: The next_item_iteration of this RequestDataLoggerSetupCsv2TimeData.
        :rtype: float
        """
        return self._next_item_iteration

    @next_item_iteration.setter
    def next_item_iteration(self, next_item_iteration):
        """Sets the next_item_iteration of this RequestDataLoggerSetupCsv2TimeData.

        Relevant row location of next item  # noqa: E501

        :param next_item_iteration: The next_item_iteration of this RequestDataLoggerSetupCsv2TimeData.
        :type next_item_iteration: float
        """
        if next_item_iteration is None:
            raise ValueError("Invalid value for `next_item_iteration`, must not be `None`")  # noqa: E501

        self._next_item_iteration = next_item_iteration

    @property
    def timezone(self):
        """Gets the timezone of this RequestDataLoggerSetupCsv2TimeData.


        :return: The timezone of this RequestDataLoggerSetupCsv2TimeData.
        :rtype: RequestDataLoggerSetupCsv2LocationSpec
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this RequestDataLoggerSetupCsv2TimeData.


        :param timezone: The timezone of this RequestDataLoggerSetupCsv2TimeData.
        :type timezone: RequestDataLoggerSetupCsv2LocationSpec
        """
        if timezone is None:
            raise ValueError("Invalid value for `timezone`, must not be `None`")  # noqa: E501

        self._timezone = timezone

    @property
    def format(self):
        """Gets the format of this RequestDataLoggerSetupCsv2TimeData.


        :return: The format of this RequestDataLoggerSetupCsv2TimeData.
        :rtype: RequestDataLoggerSetupCsv2LocationSpec
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this RequestDataLoggerSetupCsv2TimeData.


        :param format: The format of this RequestDataLoggerSetupCsv2TimeData.
        :type format: RequestDataLoggerSetupCsv2LocationSpec
        """
        if format is None:
            raise ValueError("Invalid value for `format`, must not be `None`")  # noqa: E501

        self._format = format
