<?php

/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class DeviceChannelControllerController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation deviceChannelControllerFindByPeriod
     *
     * .
     *
     * @param float $deviceId  (required)
     * @param float $channelId  (required)
     * @param string $fromTS  (required)
     * @param string $toTs  (required)
     * @param float $page  (required)
     * @param float $count  (required)
     * @param string $groupBy  (required)
     * @param string $operation  (required)
     *
     * @return Http response
     */
    public function deviceChannelControllerFindByPeriod($deviceId, $channelId, $fromTS, $toTs, $page, $count, $groupBy, $operation)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deviceChannelControllerFindByPeriod as a get method ?');
    }
    /**
     * Operation deviceChannelControllerFindDeviceChannelLastTSSnChName
     *
     * .
     *
     * @param string $serialNo  (required)
     * @param string $channelName  (required)
     *
     * @return Http response
     */
    public function deviceChannelControllerFindDeviceChannelLastTSSnChName($serialNo, $channelName)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deviceChannelControllerFindDeviceChannelLastTSSnChName as a post method ?');
    }
    /**
     * Operation deviceChannelControllerFindDeviceAllLastTS
     *
     * .
     *
     * @param float $deviceId  (required)
     *
     * @return Http response
     */
    public function deviceChannelControllerFindDeviceAllLastTS($deviceId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deviceChannelControllerFindDeviceAllLastTS as a get method ?');
    }
    /**
     * Operation deviceChannelControllerFindDeviceChannelLastTS
     *
     * .
     *
     * @param float $deviceId  (required)
     * @param float $channelId  (required)
     *
     * @return Http response
     */
    public function deviceChannelControllerFindDeviceChannelLastTS($deviceId, $channelId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deviceChannelControllerFindDeviceChannelLastTS as a get method ?');
    }
    /**
     * Operation deviceChannelControllerFindDeviceAllLastRecordedTS
     *
     * .
     *
     * @param float $deviceId  (required)
     *
     * @return Http response
     */
    public function deviceChannelControllerFindDeviceAllLastRecordedTS($deviceId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deviceChannelControllerFindDeviceAllLastRecordedTS as a get method ?');
    }
}
