<?php
/**
 * DeviceChannelControllerApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\ResponseDeviceChannelData;
use OpenAPI\Server\Model\Timestamp;

/**
 * DeviceChannelControllerApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface DeviceChannelControllerApiInterface
{

    /**
     * Sets authentication method bearerAuth
     *
     * @param string $value Value of the bearerAuth authentication method.
     *
     * @return void
     */
    public function setbearerAuth($value);

    /**
     * Operation deviceChannelControllerFindByPeriod
     *
     * @param  float $deviceId   (required)
     * @param  float $channelId   (required)
     * @param  string $fromTS   (required)
     * @param  string $toTs   (required)
     * @param  float $page   (required)
     * @param  float $count   (required)
     * @param  string $groupBy   (required)
     * @param  string $operation   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\ResponseDeviceChannelData
     *
     */
    public function deviceChannelControllerFindByPeriod($deviceId, $channelId, $fromTS, $toTs, $page, $count, $groupBy, $operation, &$responseCode, array &$responseHeaders);

    /**
     * Operation deviceChannelControllerFindDeviceAllLastRecordedTS
     *
     * @param  float $deviceId   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\Timestamp
     *
     */
    public function deviceChannelControllerFindDeviceAllLastRecordedTS($deviceId, &$responseCode, array &$responseHeaders);

    /**
     * Operation deviceChannelControllerFindDeviceAllLastTS
     *
     * @param  float $deviceId   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\ResponseDeviceChannelData[]
     *
     */
    public function deviceChannelControllerFindDeviceAllLastTS($deviceId, &$responseCode, array &$responseHeaders);

    /**
     * Operation deviceChannelControllerFindDeviceChannelLastTS
     *
     * @param  float $deviceId   (required)
     * @param  float $channelId   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\ResponseDeviceChannelData
     *
     */
    public function deviceChannelControllerFindDeviceChannelLastTS($deviceId, $channelId, &$responseCode, array &$responseHeaders);

    /**
     * Operation deviceChannelControllerFindDeviceChannelLastTSSnChName
     *
     * @param  string $serialNo   (required)
     * @param  string $channelName   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\ResponseDeviceChannelData
     *
     */
    public function deviceChannelControllerFindDeviceChannelLastTSSnChName($serialNo, $channelName, &$responseCode, array &$responseHeaders);
}
