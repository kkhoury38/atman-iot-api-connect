<?php
/**
 * DeviceTypeControllerApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\DeviceType;
use OpenAPI\Server\Model\DeviceTypeExcludingIdModelManufacturer;
use OpenAPI\Server\Model\DeviceTypeExcludingModelDescriptionManufacturer;
use OpenAPI\Server\Model\LoopbackCount;

/**
 * DeviceTypeControllerApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface DeviceTypeControllerApiInterface
{

    /**
     * Sets authentication method bearerAuth
     *
     * @param string $value Value of the bearerAuth authentication method.
     *
     * @return void
     */
    public function setbearerAuth($value);

    /**
     * Operation deviceTypeControllerCount
     *
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\LoopbackCount
     *
     */
    public function deviceTypeControllerCount(&$responseCode, array &$responseHeaders);

    /**
     * Operation deviceTypeControllerCreate
     *
     * @param  OpenAPI\Server\Model\DeviceType $deviceType   (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\DeviceType
     *
     */
    public function deviceTypeControllerCreate(DeviceType $deviceType = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation deviceTypeControllerFind
     *
     * @param  float $page   (required)
     * @param  float $count   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\DeviceType[]
     *
     */
    public function deviceTypeControllerFind($page, $count, &$responseCode, array &$responseHeaders);

    /**
     * Operation deviceTypeControllerGetAssetDeviceCategories
     *
     * @param  float $assetId   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\DeviceTypeExcludingModelDescriptionManufacturer[]
     *
     */
    public function deviceTypeControllerGetAssetDeviceCategories($assetId, &$responseCode, array &$responseHeaders);

    /**
     * Operation deviceTypeControllerUpdateById
     *
     * @param  float $id   (required)
     * @param  OpenAPI\Server\Model\DeviceTypeExcludingIdModelManufacturer $deviceTypeExcludingIdModelManufacturer   (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function deviceTypeControllerUpdateById($id, DeviceTypeExcludingIdModelManufacturer $deviceTypeExcludingIdModelManufacturer = null, &$responseCode, array &$responseHeaders);
}
