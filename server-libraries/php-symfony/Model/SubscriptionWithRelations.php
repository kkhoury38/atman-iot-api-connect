<?php
/**
 * SubscriptionWithRelations
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the SubscriptionWithRelations model.
 *
 * (tsType: SubscriptionWithRelations, schemaOptions: { includeRelations: true })
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class SubscriptionWithRelations 
{
        /**
     * @var float|null
     * @SerializedName("id")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $id;

    /**
     * @var string
     * @SerializedName("product")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $product;

    /**
     * @var string|null
     * @SerializedName("type")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $type;

    /**
     * @var string
     * @SerializedName("description")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $description;

    /**
     * @var float
     * @SerializedName("duration")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $duration;

    /**
     * @var float
     * @SerializedName("monthlyPrice")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $monthlyPrice;

    /**
     * @var float
     * @SerializedName("yearlyPrice")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $yearlyPrice;

    /**
     * @var bool
     * @SerializedName("active")
     * @Assert\NotNull()
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $active;

    /**
     * @var OpenAPI\Server\Model\UserSubscriptionWithRelations[]|null
     * @SerializedName("userSubscriptions")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\UserSubscriptionWithRelations")
     * })
     * @Type("array<OpenAPI\Server\Model\UserSubscriptionWithRelations>")
     */
    protected $userSubscriptions;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->product = isset($data['product']) ? $data['product'] : null;
        $this->type = isset($data['type']) ? $data['type'] : null;
        $this->description = isset($data['description']) ? $data['description'] : null;
        $this->duration = isset($data['duration']) ? $data['duration'] : null;
        $this->monthlyPrice = isset($data['monthlyPrice']) ? $data['monthlyPrice'] : null;
        $this->yearlyPrice = isset($data['yearlyPrice']) ? $data['yearlyPrice'] : null;
        $this->active = isset($data['active']) ? $data['active'] : null;
        $this->userSubscriptions = isset($data['userSubscriptions']) ? $data['userSubscriptions'] : null;
    }

    /**
     * Gets id.
     *
     * @return float|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param float|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets product.
     *
     * @return string
     */
    public function getProduct()
    {
        return $this->product;
    }

    /**
     * Sets product.
     *
     * @param string $product
     *
     * @return $this
     */
    public function setProduct($product)
    {
        $this->product = $product;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param string|null $type
     *
     * @return $this
     */
    public function setType($type = null)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string $description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets duration.
     *
     * @return float
     */
    public function getDuration()
    {
        return $this->duration;
    }

    /**
     * Sets duration.
     *
     * @param float $duration
     *
     * @return $this
     */
    public function setDuration($duration)
    {
        $this->duration = $duration;

        return $this;
    }

    /**
     * Gets monthlyPrice.
     *
     * @return float
     */
    public function getMonthlyPrice()
    {
        return $this->monthlyPrice;
    }

    /**
     * Sets monthlyPrice.
     *
     * @param float $monthlyPrice
     *
     * @return $this
     */
    public function setMonthlyPrice($monthlyPrice)
    {
        $this->monthlyPrice = $monthlyPrice;

        return $this;
    }

    /**
     * Gets yearlyPrice.
     *
     * @return float
     */
    public function getYearlyPrice()
    {
        return $this->yearlyPrice;
    }

    /**
     * Sets yearlyPrice.
     *
     * @param float $yearlyPrice
     *
     * @return $this
     */
    public function setYearlyPrice($yearlyPrice)
    {
        $this->yearlyPrice = $yearlyPrice;

        return $this;
    }

    /**
     * Gets active.
     *
     * @return bool
     */
    public function isActive()
    {
        return $this->active;
    }

    /**
     * Sets active.
     *
     * @param bool $active
     *
     * @return $this
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Gets userSubscriptions.
     *
     * @return OpenAPI\Server\Model\UserSubscriptionWithRelations[]|null
     */
    public function getUserSubscriptions(): ?array
    {
        return $this->userSubscriptions;
    }

    /**
     * Sets userSubscriptions.
     *
     * @param OpenAPI\Server\Model\UserSubscriptionWithRelations[]|null $userSubscriptions
     *
     * @return $this
     */
    public function setUserSubscriptions(array $userSubscriptions = null)
    {
        $this->userSubscriptions = $userSubscriptions;

        return $this;
    }
}


