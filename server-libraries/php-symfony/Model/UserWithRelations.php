<?php
/**
 * UserWithRelations
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the UserWithRelations model.
 *
 * (Schema options: { includeRelations: true })
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class UserWithRelations 
{
        /**
     * Automatically generated ID
     *
     * @var float|null
     * @SerializedName("id")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $id;

    /**
     * Username
     *
     * @var string
     * @SerializedName("username")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $username;

    /**
     * Password
     *
     * @var string|null
     * @SerializedName("passwd")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $passwd;

    /**
     * Email
     *
     * @var string
     * @SerializedName("email")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $email;

    /**
     * @var string[]|null
     * @SerializedName("roles")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $roles;

    /**
     * Automatically assigned flag to select if User is virtual or not
     *
     * @var bool
     * @SerializedName("isVirtual")
     * @Assert\NotNull()
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $isVirtual;

    /**
     * @var string|null
     * @SerializedName("subscriptionReferenceCode")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $subscriptionReferenceCode;

    /**
     * @var OpenAPI\Server\Model\UserCredentialsWithRelations|null
     * @SerializedName("userCredentials")
     * @Assert\Type("OpenAPI\Server\Model\UserCredentialsWithRelations")
     * @Type("OpenAPI\Server\Model\UserCredentialsWithRelations")
     */
    protected $userCredentials;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->username = isset($data['username']) ? $data['username'] : null;
        $this->passwd = isset($data['passwd']) ? $data['passwd'] : null;
        $this->email = isset($data['email']) ? $data['email'] : null;
        $this->roles = isset($data['roles']) ? $data['roles'] : null;
        $this->isVirtual = isset($data['isVirtual']) ? $data['isVirtual'] : null;
        $this->subscriptionReferenceCode = isset($data['subscriptionReferenceCode']) ? $data['subscriptionReferenceCode'] : null;
        $this->userCredentials = isset($data['userCredentials']) ? $data['userCredentials'] : null;
    }

    /**
     * Gets id.
     *
     * @return float|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param float|null $id  Automatically generated ID
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets username.
     *
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Sets username.
     *
     * @param string $username  Username
     *
     * @return $this
     */
    public function setUsername($username)
    {
        $this->username = $username;

        return $this;
    }

    /**
     * Gets passwd.
     *
     * @return string|null
     */
    public function getPasswd()
    {
        return $this->passwd;
    }

    /**
     * Sets passwd.
     *
     * @param string|null $passwd  Password
     *
     * @return $this
     */
    public function setPasswd($passwd = null)
    {
        $this->passwd = $passwd;

        return $this;
    }

    /**
     * Gets email.
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Sets email.
     *
     * @param string $email  Email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Gets roles.
     *
     * @return string[]|null
     */
    public function getRoles(): ?array
    {
        return $this->roles;
    }

    /**
     * Sets roles.
     *
     * @param string[]|null $roles
     *
     * @return $this
     */
    public function setRoles(array $roles = null)
    {
        $this->roles = $roles;

        return $this;
    }

    /**
     * Gets isVirtual.
     *
     * @return bool
     */
    public function isIsVirtual()
    {
        return $this->isVirtual;
    }

    /**
     * Sets isVirtual.
     *
     * @param bool $isVirtual  Automatically assigned flag to select if User is virtual or not
     *
     * @return $this
     */
    public function setIsVirtual($isVirtual)
    {
        $this->isVirtual = $isVirtual;

        return $this;
    }

    /**
     * Gets subscriptionReferenceCode.
     *
     * @return string|null
     */
    public function getSubscriptionReferenceCode()
    {
        return $this->subscriptionReferenceCode;
    }

    /**
     * Sets subscriptionReferenceCode.
     *
     * @param string|null $subscriptionReferenceCode
     *
     * @return $this
     */
    public function setSubscriptionReferenceCode($subscriptionReferenceCode = null)
    {
        $this->subscriptionReferenceCode = $subscriptionReferenceCode;

        return $this;
    }

    /**
     * Gets userCredentials.
     *
     * @return OpenAPI\Server\Model\UserCredentialsWithRelations|null
     */
    public function getUserCredentials(): ?UserCredentialsWithRelations
    {
        return $this->userCredentials;
    }

    /**
     * Sets userCredentials.
     *
     * @param OpenAPI\Server\Model\UserCredentialsWithRelations|null $userCredentials
     *
     * @return $this
     */
    public function setUserCredentials(UserCredentialsWithRelations $userCredentials = null)
    {
        $this->userCredentials = $userCredentials;

        return $this;
    }
}


