<?php
/**
 * UserSubscriptionWithRelations
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the UserSubscriptionWithRelations model.
 *
 * (tsType: UserSubscriptionWithRelations, schemaOptions: { includeRelations: true })
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class UserSubscriptionWithRelations 
{
        /**
     * @var float|null
     * @SerializedName("id")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $id;

    /**
     * @var string
     * @SerializedName("referenceCode")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $referenceCode;

    /**
     * @var string|null
     * @SerializedName("email")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $email;

    /**
     * @var float
     * @SerializedName("discount")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $discount;

    /**
     * Timestamp
     *
     * @var \DateTime
     * @SerializedName("creationTimestamp")
     * @Assert\NotNull()
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $creationTimestamp;

    /**
     * Timestamp
     *
     * @var \DateTime|null
     * @SerializedName("activationTimestamp")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $activationTimestamp;

    /**
     * Timestamp
     *
     * @var \DateTime|null
     * @SerializedName("endTimestamp")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $endTimestamp;

    /**
     * @var bool
     * @SerializedName("hasRegistered")
     * @Assert\NotNull()
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $hasRegistered;

    /**
     * ID of Subscription
     *
     * @var float
     * @SerializedName("subscriptionId")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $subscriptionId;

    /**
     * @var OpenAPI\Server\Model\SubscriptionWithRelations|null
     * @SerializedName("subscription")
     * @Assert\Type("OpenAPI\Server\Model\SubscriptionWithRelations")
     * @Type("OpenAPI\Server\Model\SubscriptionWithRelations")
     */
    protected $subscription;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->referenceCode = isset($data['referenceCode']) ? $data['referenceCode'] : null;
        $this->email = isset($data['email']) ? $data['email'] : null;
        $this->discount = isset($data['discount']) ? $data['discount'] : null;
        $this->creationTimestamp = isset($data['creationTimestamp']) ? $data['creationTimestamp'] : null;
        $this->activationTimestamp = isset($data['activationTimestamp']) ? $data['activationTimestamp'] : null;
        $this->endTimestamp = isset($data['endTimestamp']) ? $data['endTimestamp'] : null;
        $this->hasRegistered = isset($data['hasRegistered']) ? $data['hasRegistered'] : null;
        $this->subscriptionId = isset($data['subscriptionId']) ? $data['subscriptionId'] : null;
        $this->subscription = isset($data['subscription']) ? $data['subscription'] : null;
    }

    /**
     * Gets id.
     *
     * @return float|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param float|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets referenceCode.
     *
     * @return string
     */
    public function getReferenceCode()
    {
        return $this->referenceCode;
    }

    /**
     * Sets referenceCode.
     *
     * @param string $referenceCode
     *
     * @return $this
     */
    public function setReferenceCode($referenceCode)
    {
        $this->referenceCode = $referenceCode;

        return $this;
    }

    /**
     * Gets email.
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Sets email.
     *
     * @param string|null $email
     *
     * @return $this
     */
    public function setEmail($email = null)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Gets discount.
     *
     * @return float
     */
    public function getDiscount()
    {
        return $this->discount;
    }

    /**
     * Sets discount.
     *
     * @param float $discount
     *
     * @return $this
     */
    public function setDiscount($discount)
    {
        $this->discount = $discount;

        return $this;
    }

    /**
     * Gets creationTimestamp.
     *
     * @return \DateTime
     */
    public function getCreationTimestamp(): \DateTime
    {
        return $this->creationTimestamp;
    }

    /**
     * Sets creationTimestamp.
     *
     * @param \DateTime $creationTimestamp  Timestamp
     *
     * @return $this
     */
    public function setCreationTimestamp(\DateTime $creationTimestamp)
    {
        $this->creationTimestamp = $creationTimestamp;

        return $this;
    }

    /**
     * Gets activationTimestamp.
     *
     * @return \DateTime|null
     */
    public function getActivationTimestamp(): ?\DateTime
    {
        return $this->activationTimestamp;
    }

    /**
     * Sets activationTimestamp.
     *
     * @param \DateTime|null $activationTimestamp  Timestamp
     *
     * @return $this
     */
    public function setActivationTimestamp(\DateTime $activationTimestamp = null)
    {
        $this->activationTimestamp = $activationTimestamp;

        return $this;
    }

    /**
     * Gets endTimestamp.
     *
     * @return \DateTime|null
     */
    public function getEndTimestamp(): ?\DateTime
    {
        return $this->endTimestamp;
    }

    /**
     * Sets endTimestamp.
     *
     * @param \DateTime|null $endTimestamp  Timestamp
     *
     * @return $this
     */
    public function setEndTimestamp(\DateTime $endTimestamp = null)
    {
        $this->endTimestamp = $endTimestamp;

        return $this;
    }

    /**
     * Gets hasRegistered.
     *
     * @return bool
     */
    public function isHasRegistered()
    {
        return $this->hasRegistered;
    }

    /**
     * Sets hasRegistered.
     *
     * @param bool $hasRegistered
     *
     * @return $this
     */
    public function setHasRegistered($hasRegistered)
    {
        $this->hasRegistered = $hasRegistered;

        return $this;
    }

    /**
     * Gets subscriptionId.
     *
     * @return float
     */
    public function getSubscriptionId()
    {
        return $this->subscriptionId;
    }

    /**
     * Sets subscriptionId.
     *
     * @param float $subscriptionId  ID of Subscription
     *
     * @return $this
     */
    public function setSubscriptionId($subscriptionId)
    {
        $this->subscriptionId = $subscriptionId;

        return $this;
    }

    /**
     * Gets subscription.
     *
     * @return OpenAPI\Server\Model\SubscriptionWithRelations|null
     */
    public function getSubscription(): ?SubscriptionWithRelations
    {
        return $this->subscription;
    }

    /**
     * Sets subscription.
     *
     * @param OpenAPI\Server\Model\SubscriptionWithRelations|null $subscription
     *
     * @return $this
     */
    public function setSubscription(SubscriptionWithRelations $subscription = null)
    {
        $this->subscription = $subscription;

        return $this;
    }
}


