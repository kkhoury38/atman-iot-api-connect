<?php
/**
 * EventExcludingIdResolvedTimestampResolutionTimestamp
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the EventExcludingIdResolvedTimestampResolutionTimestamp model.
 *
 * (Schema options: { exclude: [ &#39;id&#39;, &#39;resolved&#39;, &#39;timestamp&#39;, &#39;resolutionTimestamp&#39; ] })
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class EventExcludingIdResolvedTimestampResolutionTimestamp 
{
        /**
     * ID of Asset associated with Event
     *
     * @var float
     * @SerializedName("assetId")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $assetId;

    /**
     * ID of EventRule triggered
     *
     * @var float
     * @SerializedName("eventRuleId")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $eventRuleId;

    /**
     * Event severity - Can be  LOW / MEDIUM / HIGH
     *
     * @var string
     * @SerializedName("severity")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $severity;

    /**
     * Event description
     *
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $description;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->assetId = isset($data['assetId']) ? $data['assetId'] : null;
        $this->eventRuleId = isset($data['eventRuleId']) ? $data['eventRuleId'] : null;
        $this->severity = isset($data['severity']) ? $data['severity'] : null;
        $this->description = isset($data['description']) ? $data['description'] : null;
    }

    /**
     * Gets assetId.
     *
     * @return float
     */
    public function getAssetId()
    {
        return $this->assetId;
    }

    /**
     * Sets assetId.
     *
     * @param float $assetId  ID of Asset associated with Event
     *
     * @return $this
     */
    public function setAssetId($assetId)
    {
        $this->assetId = $assetId;

        return $this;
    }

    /**
     * Gets eventRuleId.
     *
     * @return float
     */
    public function getEventRuleId()
    {
        return $this->eventRuleId;
    }

    /**
     * Sets eventRuleId.
     *
     * @param float $eventRuleId  ID of EventRule triggered
     *
     * @return $this
     */
    public function setEventRuleId($eventRuleId)
    {
        $this->eventRuleId = $eventRuleId;

        return $this;
    }

    /**
     * Gets severity.
     *
     * @return string
     */
    public function getSeverity()
    {
        return $this->severity;
    }

    /**
     * Sets severity.
     *
     * @param string $severity  Event severity - Can be  LOW / MEDIUM / HIGH
     *
     * @return $this
     */
    public function setSeverity($severity)
    {
        $this->severity = $severity;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string|null $description  Event description
     *
     * @return $this
     */
    public function setDescription($description = null)
    {
        $this->description = $description;

        return $this;
    }
}


