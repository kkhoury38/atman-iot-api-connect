<?php
/**
 * RequestEventCreateRule
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RequestEventCreateRule model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class RequestEventCreateRule 
{
        /**
     * Rule description
     *
     * @var string
     * @SerializedName("description")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $description;

    /**
     * @var OpenAPI\Server\Model\RequestEventRuleScope[]
     * @SerializedName("scope")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RequestEventRuleScope")
     * })
     * @Type("array<OpenAPI\Server\Model\RequestEventRuleScope>")
     */
    protected $scope;

    /**
     * Rule action
     *
     * @var string
     * @SerializedName("action")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $action;

    /**
     * Action Parameters
     *
     * @var array
     * @SerializedName("actionParameters")
     * @Assert\NotNull()
     * @Assert\Type("array")
     * @Type("array")
     */
    protected $actionParameters;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->description = isset($data['description']) ? $data['description'] : null;
        $this->scope = isset($data['scope']) ? $data['scope'] : null;
        $this->action = isset($data['action']) ? $data['action'] : null;
        $this->actionParameters = isset($data['actionParameters']) ? $data['actionParameters'] : null;
    }

    /**
     * Gets description.
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string $description  Rule description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets scope.
     *
     * @return OpenAPI\Server\Model\RequestEventRuleScope[]
     */
    public function getScope(): array
    {
        return $this->scope;
    }

    /**
     * Sets scope.
     *
     * @param OpenAPI\Server\Model\RequestEventRuleScope[] $scope
     *
     * @return $this
     */
    public function setScope(array $scope)
    {
        $this->scope = $scope;

        return $this;
    }

    /**
     * Gets action.
     *
     * @return string
     */
    public function getAction()
    {
        return $this->action;
    }

    /**
     * Sets action.
     *
     * @param string $action  Rule action
     *
     * @return $this
     */
    public function setAction($action)
    {
        $this->action = $action;

        return $this;
    }

    /**
     * Gets actionParameters.
     *
     * @return array
     */
    public function getActionParameters(): array
    {
        return $this->actionParameters;
    }

    /**
     * Sets actionParameters.
     *
     * @param array $actionParameters  Action Parameters
     *
     * @return $this
     */
    public function setActionParameters(array $actionParameters)
    {
        $this->actionParameters = $actionParameters;

        return $this;
    }
}


