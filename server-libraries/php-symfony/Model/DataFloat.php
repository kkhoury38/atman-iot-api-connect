<?php
/**
 * DataFloat
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the DataFloat model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class DataFloat 
{
        /**
     * Automatically generated ID
     *
     * @var float|null
     * @SerializedName("id")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $id;

    /**
     * Recording period - seconds
     *
     * @var float
     * @SerializedName("period")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $period;

    /**
     * Recorded measurement
     *
     * @var float
     * @SerializedName("measurement")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $measurement;

    /**
     * Timestamp
     *
     * @var \DateTime
     * @SerializedName("timestamp")
     * @Assert\NotNull()
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $timestamp;

    /**
     * ID of Channel that DataFloat belongs to
     *
     * @var float
     * @SerializedName("channelId")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $channelId;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->period = isset($data['period']) ? $data['period'] : null;
        $this->measurement = isset($data['measurement']) ? $data['measurement'] : null;
        $this->timestamp = isset($data['timestamp']) ? $data['timestamp'] : null;
        $this->channelId = isset($data['channelId']) ? $data['channelId'] : null;
    }

    /**
     * Gets id.
     *
     * @return float|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param float|null $id  Automatically generated ID
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets period.
     *
     * @return float
     */
    public function getPeriod()
    {
        return $this->period;
    }

    /**
     * Sets period.
     *
     * @param float $period  Recording period - seconds
     *
     * @return $this
     */
    public function setPeriod($period)
    {
        $this->period = $period;

        return $this;
    }

    /**
     * Gets measurement.
     *
     * @return float
     */
    public function getMeasurement()
    {
        return $this->measurement;
    }

    /**
     * Sets measurement.
     *
     * @param float $measurement  Recorded measurement
     *
     * @return $this
     */
    public function setMeasurement($measurement)
    {
        $this->measurement = $measurement;

        return $this;
    }

    /**
     * Gets timestamp.
     *
     * @return \DateTime
     */
    public function getTimestamp(): \DateTime
    {
        return $this->timestamp;
    }

    /**
     * Sets timestamp.
     *
     * @param \DateTime $timestamp  Timestamp
     *
     * @return $this
     */
    public function setTimestamp(\DateTime $timestamp)
    {
        $this->timestamp = $timestamp;

        return $this;
    }

    /**
     * Gets channelId.
     *
     * @return float
     */
    public function getChannelId()
    {
        return $this->channelId;
    }

    /**
     * Sets channelId.
     *
     * @param float $channelId  ID of Channel that DataFloat belongs to
     *
     * @return $this
     */
    public function setChannelId($channelId)
    {
        $this->channelId = $channelId;

        return $this;
    }
}


