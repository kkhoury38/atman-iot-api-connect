<?php
/**
 * ChannelExcludingIdDeviceId
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Atman IoT
 *
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ChannelExcludingIdDeviceId model.
 *
 * (Schema options: { exclude: [ &#39;id&#39;, &#39;deviceId&#39; ] })
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ChannelExcludingIdDeviceId 
{
        /**
     * Enable channel monitoring - data recording - by setting to true
     *
     * @var bool
     * @SerializedName("monitor")
     * @Assert\NotNull()
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $monitor;

    /**
     * Timestamp
     *
     * @var \DateTime|null
     * @SerializedName("lastTimestamp")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $lastTimestamp;

    /**
     * Channel Status
     *
     * @var string|null
     * @SerializedName("status")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $status;

    /**
     * ID of ChannelType associated with Channel
     *
     * @var float
     * @SerializedName("channelTypeId")
     * @Assert\NotNull()
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $channelTypeId;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->monitor = isset($data['monitor']) ? $data['monitor'] : null;
        $this->lastTimestamp = isset($data['lastTimestamp']) ? $data['lastTimestamp'] : null;
        $this->status = isset($data['status']) ? $data['status'] : null;
        $this->channelTypeId = isset($data['channelTypeId']) ? $data['channelTypeId'] : null;
    }

    /**
     * Gets monitor.
     *
     * @return bool
     */
    public function isMonitor()
    {
        return $this->monitor;
    }

    /**
     * Sets monitor.
     *
     * @param bool $monitor  Enable channel monitoring - data recording - by setting to true
     *
     * @return $this
     */
    public function setMonitor($monitor)
    {
        $this->monitor = $monitor;

        return $this;
    }

    /**
     * Gets lastTimestamp.
     *
     * @return \DateTime|null
     */
    public function getLastTimestamp(): ?\DateTime
    {
        return $this->lastTimestamp;
    }

    /**
     * Sets lastTimestamp.
     *
     * @param \DateTime|null $lastTimestamp  Timestamp
     *
     * @return $this
     */
    public function setLastTimestamp(\DateTime $lastTimestamp = null)
    {
        $this->lastTimestamp = $lastTimestamp;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param string|null $status  Channel Status
     *
     * @return $this
     */
    public function setStatus($status = null)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets channelTypeId.
     *
     * @return float
     */
    public function getChannelTypeId()
    {
        return $this->channelTypeId;
    }

    /**
     * Sets channelTypeId.
     *
     * @param float $channelTypeId  ID of ChannelType associated with Channel
     *
     * @return $this
     */
    public function setChannelTypeId($channelTypeId)
    {
        $this->channelTypeId = $channelTypeId;

        return $this;
    }
}


