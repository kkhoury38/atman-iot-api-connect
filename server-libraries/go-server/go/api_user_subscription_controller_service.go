/*
 * Atman IoT
 *
 * Atman IoT Server
 *
 * API version: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"errors"
)

// UserSubscriptionControllerApiService is a service that implents the logic for the UserSubscriptionControllerApiServicer
// This service should implement the business logic for every endpoint for the UserSubscriptionControllerApi API. 
// Include any external packages or services that will be required by this service.
type UserSubscriptionControllerApiService struct {
}

// NewUserSubscriptionControllerApiService creates a default api service
func NewUserSubscriptionControllerApiService() UserSubscriptionControllerApiServicer {
	return &UserSubscriptionControllerApiService{}
}

// UserSubscriptionControllerCreate - 
func (s *UserSubscriptionControllerApiService) UserSubscriptionControllerCreate(body map[string]interface{}) (interface{}, error) {
	// TODO - update UserSubscriptionControllerCreate with the required logic for this service method.
	// Add api_user_subscription_controller_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'UserSubscriptionControllerCreate' not implemented")
}

// UserSubscriptionControllerCreateUserSubscriptionBySubId - 
func (s *UserSubscriptionControllerApiService) UserSubscriptionControllerCreateUserSubscriptionBySubId(subscriptionId float32) (interface{}, error) {
	// TODO - update UserSubscriptionControllerCreateUserSubscriptionBySubId with the required logic for this service method.
	// Add api_user_subscription_controller_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'UserSubscriptionControllerCreateUserSubscriptionBySubId' not implemented")
}

// UserSubscriptionControllerFindSubscriptionsByCategory - 
func (s *UserSubscriptionControllerApiService) UserSubscriptionControllerFindSubscriptionsByCategory(product string) (interface{}, error) {
	// TODO - update UserSubscriptionControllerFindSubscriptionsByCategory with the required logic for this service method.
	// Add api_user_subscription_controller_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'UserSubscriptionControllerFindSubscriptionsByCategory' not implemented")
}

// UserSubscriptionControllerGetByRefferenceCode - 
func (s *UserSubscriptionControllerApiService) UserSubscriptionControllerGetByRefferenceCode(referenceCode string) (interface{}, error) {
	// TODO - update UserSubscriptionControllerGetByRefferenceCode with the required logic for this service method.
	// Add api_user_subscription_controller_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'UserSubscriptionControllerGetByRefferenceCode' not implemented")
}

// UserSubscriptionControllerVerifyCode - 
func (s *UserSubscriptionControllerApiService) UserSubscriptionControllerVerifyCode(codeVerificationRequest CodeVerificationRequest) (interface{}, error) {
	// TODO - update UserSubscriptionControllerVerifyCode with the required logic for this service method.
	// Add api_user_subscription_controller_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'UserSubscriptionControllerVerifyCode' not implemented")
}
