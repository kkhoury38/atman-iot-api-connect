/*
 * Atman IoT
 *
 * Atman IoT Server
 *
 * API version: 3.0.1
 * Contact: k.khoury@k-ren.gr
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A DeviceGroupMembershipControllerApiController binds http requests to an api service and writes the service results to the http response
type DeviceGroupMembershipControllerApiController struct {
	service DeviceGroupMembershipControllerApiServicer
}

// NewDeviceGroupMembershipControllerApiController creates a default api controller
func NewDeviceGroupMembershipControllerApiController(s DeviceGroupMembershipControllerApiServicer) Router {
	return &DeviceGroupMembershipControllerApiController{ service: s }
}

// Routes returns all of the api route for the DeviceGroupMembershipControllerApiController
func (c *DeviceGroupMembershipControllerApiController) Routes() Routes {
	return Routes{ 
		{
			"DeviceGroupMembershipControllerCreate",
			strings.ToUpper("Post"),
			"/api/device-group-memberships",
			c.DeviceGroupMembershipControllerCreate,
		},
		{
			"DeviceGroupMembershipControllerDeleteById",
			strings.ToUpper("Delete"),
			"/api/device-group-memberships/{id}",
			c.DeviceGroupMembershipControllerDeleteById,
		},
		{
			"DeviceGroupMembershipControllerFindByAssetId",
			strings.ToUpper("Get"),
			"/api/device-group-memberships/by-asset/{assetId}",
			c.DeviceGroupMembershipControllerFindByAssetId,
		},
		{
			"DeviceGroupMembershipControllerFindByDeviceId",
			strings.ToUpper("Get"),
			"/api/device-group-memberships/by-device/{deviceId}",
			c.DeviceGroupMembershipControllerFindByDeviceId,
		},
	}
}

// DeviceGroupMembershipControllerCreate - 
func (c *DeviceGroupMembershipControllerApiController) DeviceGroupMembershipControllerCreate(w http.ResponseWriter, r *http.Request) { 
	deviceGroupMembershipExcludingId := &DeviceGroupMembershipExcludingId{}
	if err := json.NewDecoder(r.Body).Decode(&deviceGroupMembershipExcludingId); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.DeviceGroupMembershipControllerCreate(*deviceGroupMembershipExcludingId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeviceGroupMembershipControllerDeleteById - 
func (c *DeviceGroupMembershipControllerApiController) DeviceGroupMembershipControllerDeleteById(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.DeviceGroupMembershipControllerDeleteById(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeviceGroupMembershipControllerFindByAssetId - 
func (c *DeviceGroupMembershipControllerApiController) DeviceGroupMembershipControllerFindByAssetId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	assetId := params["assetId"]
	result, err := c.service.DeviceGroupMembershipControllerFindByAssetId(assetId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeviceGroupMembershipControllerFindByDeviceId - 
func (c *DeviceGroupMembershipControllerApiController) DeviceGroupMembershipControllerFindByDeviceId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	deviceId := params["deviceId"]
	result, err := c.service.DeviceGroupMembershipControllerFindByDeviceId(deviceId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
