# coding: utf-8

"""
    Atman IoT

    Atman IoT Server  # noqa: E501

    The version of the OpenAPI document: 3.0.1
    Contact: k.khoury@k-ren.gr
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.data_logger_with_relations import DataLoggerWithRelations  # noqa: E501
from openapi_client.rest import ApiException

class TestDataLoggerWithRelations(unittest.TestCase):
    """DataLoggerWithRelations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DataLoggerWithRelations
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.data_logger_with_relations.DataLoggerWithRelations()  # noqa: E501
        if include_optional :
            return DataLoggerWithRelations(
                id = 1.337, 
                description = '0', 
                connection_type = '0', 
                file_format = '0', 
                username = '0', 
                passwd = '0', 
                auth_token = '0', 
                config = '0', 
                auto_init = True, 
                data_compressed = True, 
                user_id = 1.337, 
                user = openapi_client.models.user_with_relations.UserWithRelations(
                    id = 1.337, 
                    username = '0', 
                    passwd = '0', 
                    email = '0', 
                    roles = [
                        '0'
                        ], 
                    is_virtual = True, 
                    subscription_reference_code = '0', 
                    user_credentials = openapi_client.models.user_credentials_with_relations.UserCredentialsWithRelations(
                        id = 1.337, 
                        passwd = '0', 
                        user_id = 1.337, ), )
            )
        else :
            return DataLoggerWithRelations(
                connection_type = '0',
                file_format = '0',
                auto_init = True,
                data_compressed = True,
                user_id = 1.337,
        )

    def testDataLoggerWithRelations(self):
        """Test DataLoggerWithRelations"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
