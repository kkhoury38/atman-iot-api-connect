# coding: utf-8

"""
    Atman IoT

    Atman IoT Server  # noqa: E501

    The version of the OpenAPI document: 3.0.1
    Contact: k.khoury@k-ren.gr
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.dashboard_element_with_scope import DashboardElementWithScope  # noqa: E501
from openapi_client.rest import ApiException

class TestDashboardElementWithScope(unittest.TestCase):
    """DashboardElementWithScope unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DashboardElementWithScope
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.dashboard_element_with_scope.DashboardElementWithScope()  # noqa: E501
        if include_optional :
            return DashboardElementWithScope(
                dashboard_element = openapi_client.models.dashboard_element.DashboardElement(
                    id = 1.337, 
                    asset_id = 1.337, 
                    user_id = 1.337, 
                    device_category = '0', 
                    channel_category = '0', 
                    element_type = '0', 
                    position = 1.337, 
                    location = '0', 
                    time_window = 1.337, 
                    operation = '0', 
                    group_by = '0', 
                    title = '0', 
                    x_label = '0', 
                    y_label = '0', ), 
                scope = [
                    None
                    ]
            )
        else :
            return DashboardElementWithScope(
                dashboard_element = openapi_client.models.dashboard_element.DashboardElement(
                    id = 1.337, 
                    asset_id = 1.337, 
                    user_id = 1.337, 
                    device_category = '0', 
                    channel_category = '0', 
                    element_type = '0', 
                    position = 1.337, 
                    location = '0', 
                    time_window = 1.337, 
                    operation = '0', 
                    group_by = '0', 
                    title = '0', 
                    x_label = '0', 
                    y_label = '0', ),
                scope = [
                    None
                    ],
        )

    def testDashboardElementWithScope(self):
        """Test DashboardElementWithScope"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
