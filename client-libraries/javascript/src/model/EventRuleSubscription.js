/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventRuleSubscription model module.
 * @module model/EventRuleSubscription
 * @version 3.0.1
 */
class EventRuleSubscription {
    /**
     * Constructs a new <code>EventRuleSubscription</code>.
     * @alias module:model/EventRuleSubscription
     * @param executionPeriod {Number} EventRule execution period - seconds
     * @param assetId {Number} ID of Asset subscribed to EventRule
     * @param eventRuleId {Number} ID of associated EventRule
     * @param ruleActivated {Boolean} Is set to true when EventRule has been activated
     */
    constructor(executionPeriod, assetId, eventRuleId, ruleActivated) { 
        
        EventRuleSubscription.initialize(this, executionPeriod, assetId, eventRuleId, ruleActivated);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, executionPeriod, assetId, eventRuleId, ruleActivated) { 
        obj['executionPeriod'] = executionPeriod;
        obj['assetId'] = assetId;
        obj['eventRuleId'] = eventRuleId;
        obj['ruleActivated'] = ruleActivated;
    }

    /**
     * Constructs a <code>EventRuleSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventRuleSubscription} obj Optional instance to populate.
     * @return {module:model/EventRuleSubscription} The populated <code>EventRuleSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventRuleSubscription();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('executionPeriod')) {
                obj['executionPeriod'] = ApiClient.convertToType(data['executionPeriod'], 'Number');
            }
            if (data.hasOwnProperty('lastExecTimestamp')) {
                obj['lastExecTimestamp'] = ApiClient.convertToType(data['lastExecTimestamp'], 'String');
            }
            if (data.hasOwnProperty('assetId')) {
                obj['assetId'] = ApiClient.convertToType(data['assetId'], 'Number');
            }
            if (data.hasOwnProperty('eventRuleId')) {
                obj['eventRuleId'] = ApiClient.convertToType(data['eventRuleId'], 'Number');
            }
            if (data.hasOwnProperty('ruleActivated')) {
                obj['ruleActivated'] = ApiClient.convertToType(data['ruleActivated'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Automatically generated ID
 * @member {Number} id
 */
EventRuleSubscription.prototype['id'] = undefined;

/**
 * EventRule execution period - seconds
 * @member {Number} executionPeriod
 */
EventRuleSubscription.prototype['executionPeriod'] = undefined;

/**
 * Last execution timestamp
 * @member {String} lastExecTimestamp
 */
EventRuleSubscription.prototype['lastExecTimestamp'] = undefined;

/**
 * ID of Asset subscribed to EventRule
 * @member {Number} assetId
 */
EventRuleSubscription.prototype['assetId'] = undefined;

/**
 * ID of associated EventRule
 * @member {Number} eventRuleId
 */
EventRuleSubscription.prototype['eventRuleId'] = undefined;

/**
 * Is set to true when EventRule has been activated
 * @member {Boolean} ruleActivated
 */
EventRuleSubscription.prototype['ruleActivated'] = undefined;






export default EventRuleSubscription;

