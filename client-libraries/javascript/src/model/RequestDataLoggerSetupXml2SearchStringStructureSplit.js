/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RequestDataLoggerSetupXml2SearchStringStructureSplit model module.
 * @module model/RequestDataLoggerSetupXml2SearchStringStructureSplit
 * @version 3.0.1
 */
class RequestDataLoggerSetupXml2SearchStringStructureSplit {
    /**
     * Constructs a new <code>RequestDataLoggerSetupXml2SearchStringStructureSplit</code>.
     * (Schema options: { exclude: [ &#39;fileFormat&#39; ] })
     * @alias module:model/RequestDataLoggerSetupXml2SearchStringStructureSplit
     * @param delimiter {String} Delimiter used to split the string in the provided XML Key
     * @param location {Number} Location of the required value in string split using delimmiter
     */
    constructor(delimiter, location) { 
        
        RequestDataLoggerSetupXml2SearchStringStructureSplit.initialize(this, delimiter, location);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, delimiter, location) { 
        obj['delimiter'] = delimiter;
        obj['location'] = location;
    }

    /**
     * Constructs a <code>RequestDataLoggerSetupXml2SearchStringStructureSplit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestDataLoggerSetupXml2SearchStringStructureSplit} obj Optional instance to populate.
     * @return {module:model/RequestDataLoggerSetupXml2SearchStringStructureSplit} The populated <code>RequestDataLoggerSetupXml2SearchStringStructureSplit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestDataLoggerSetupXml2SearchStringStructureSplit();

            if (data.hasOwnProperty('delimiter')) {
                obj['delimiter'] = ApiClient.convertToType(data['delimiter'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Delimiter used to split the string in the provided XML Key
 * @member {String} delimiter
 */
RequestDataLoggerSetupXml2SearchStringStructureSplit.prototype['delimiter'] = undefined;

/**
 * Location of the required value in string split using delimmiter
 * @member {Number} location
 */
RequestDataLoggerSetupXml2SearchStringStructureSplit.prototype['location'] = undefined;






export default RequestDataLoggerSetupXml2SearchStringStructureSplit;

