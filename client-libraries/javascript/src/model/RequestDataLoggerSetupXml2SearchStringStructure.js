/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RequestDataLoggerSetupXml2SearchStringStructureSplit from './RequestDataLoggerSetupXml2SearchStringStructureSplit';

/**
 * The RequestDataLoggerSetupXml2SearchStringStructure model module.
 * @module model/RequestDataLoggerSetupXml2SearchStringStructure
 * @version 3.0.1
 */
class RequestDataLoggerSetupXml2SearchStringStructure {
    /**
     * Constructs a new <code>RequestDataLoggerSetupXml2SearchStringStructure</code>.
     * (Schema options: { exclude: [ &#39;fileFormat&#39; ] })
     * @alias module:model/RequestDataLoggerSetupXml2SearchStringStructure
     * @param key {String} XML key containing parent attribute
     * @param isString {Boolean} Flag for selecting if parent value is the entire string contained in the provided XML Key.  If set to true performSplit must be defined
     * @param performSplit {Array.<module:model/RequestDataLoggerSetupXml2SearchStringStructureSplit>} 
     */
    constructor(key, isString, performSplit) { 
        
        RequestDataLoggerSetupXml2SearchStringStructure.initialize(this, key, isString, performSplit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, key, isString, performSplit) { 
        obj['key'] = key;
        obj['isString'] = isString;
        obj['performSplit'] = performSplit;
    }

    /**
     * Constructs a <code>RequestDataLoggerSetupXml2SearchStringStructure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestDataLoggerSetupXml2SearchStringStructure} obj Optional instance to populate.
     * @return {module:model/RequestDataLoggerSetupXml2SearchStringStructure} The populated <code>RequestDataLoggerSetupXml2SearchStringStructure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestDataLoggerSetupXml2SearchStringStructure();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('isString')) {
                obj['isString'] = ApiClient.convertToType(data['isString'], 'Boolean');
            }
            if (data.hasOwnProperty('performSplit')) {
                obj['performSplit'] = ApiClient.convertToType(data['performSplit'], [RequestDataLoggerSetupXml2SearchStringStructureSplit]);
            }
        }
        return obj;
    }


}

/**
 * XML key containing parent attribute
 * @member {String} key
 */
RequestDataLoggerSetupXml2SearchStringStructure.prototype['key'] = undefined;

/**
 * Flag for selecting if parent value is the entire string contained in the provided XML Key.  If set to true performSplit must be defined
 * @member {Boolean} isString
 */
RequestDataLoggerSetupXml2SearchStringStructure.prototype['isString'] = undefined;

/**
 * @member {Array.<module:model/RequestDataLoggerSetupXml2SearchStringStructureSplit>} performSplit
 */
RequestDataLoggerSetupXml2SearchStringStructure.prototype['performSplit'] = undefined;






export default RequestDataLoggerSetupXml2SearchStringStructure;

