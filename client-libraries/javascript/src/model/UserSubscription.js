/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserSubscription model module.
 * @module model/UserSubscription
 * @version 3.0.1
 */
class UserSubscription {
    /**
     * Constructs a new <code>UserSubscription</code>.
     * @alias module:model/UserSubscription
     * @param referenceCode {String} 
     * @param discount {Number} 
     * @param creationTimestamp {Date} Timestamp
     * @param hasRegistered {Boolean} 
     * @param subscriptionId {Number} ID of Subscription
     */
    constructor(referenceCode, discount, creationTimestamp, hasRegistered, subscriptionId) { 
        
        UserSubscription.initialize(this, referenceCode, discount, creationTimestamp, hasRegistered, subscriptionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, referenceCode, discount, creationTimestamp, hasRegistered, subscriptionId) { 
        obj['referenceCode'] = referenceCode;
        obj['discount'] = discount;
        obj['creationTimestamp'] = creationTimestamp;
        obj['hasRegistered'] = hasRegistered;
        obj['subscriptionId'] = subscriptionId;
    }

    /**
     * Constructs a <code>UserSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserSubscription} obj Optional instance to populate.
     * @return {module:model/UserSubscription} The populated <code>UserSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserSubscription();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('referenceCode')) {
                obj['referenceCode'] = ApiClient.convertToType(data['referenceCode'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('discount')) {
                obj['discount'] = ApiClient.convertToType(data['discount'], 'Number');
            }
            if (data.hasOwnProperty('creationTimestamp')) {
                obj['creationTimestamp'] = ApiClient.convertToType(data['creationTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('activationTimestamp')) {
                obj['activationTimestamp'] = ApiClient.convertToType(data['activationTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('endTimestamp')) {
                obj['endTimestamp'] = ApiClient.convertToType(data['endTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('hasRegistered')) {
                obj['hasRegistered'] = ApiClient.convertToType(data['hasRegistered'], 'Boolean');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
UserSubscription.prototype['id'] = undefined;

/**
 * @member {String} referenceCode
 */
UserSubscription.prototype['referenceCode'] = undefined;

/**
 * @member {String} email
 */
UserSubscription.prototype['email'] = undefined;

/**
 * @member {Number} discount
 */
UserSubscription.prototype['discount'] = undefined;

/**
 * Timestamp
 * @member {Date} creationTimestamp
 */
UserSubscription.prototype['creationTimestamp'] = undefined;

/**
 * Timestamp
 * @member {Date} activationTimestamp
 */
UserSubscription.prototype['activationTimestamp'] = undefined;

/**
 * Timestamp
 * @member {Date} endTimestamp
 */
UserSubscription.prototype['endTimestamp'] = undefined;

/**
 * @member {Boolean} hasRegistered
 */
UserSubscription.prototype['hasRegistered'] = undefined;

/**
 * ID of Subscription
 * @member {Number} subscriptionId
 */
UserSubscription.prototype['subscriptionId'] = undefined;






export default UserSubscription;

