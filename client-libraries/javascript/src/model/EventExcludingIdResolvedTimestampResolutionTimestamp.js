/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventExcludingIdResolvedTimestampResolutionTimestamp model module.
 * @module model/EventExcludingIdResolvedTimestampResolutionTimestamp
 * @version 3.0.1
 */
class EventExcludingIdResolvedTimestampResolutionTimestamp {
    /**
     * Constructs a new <code>EventExcludingIdResolvedTimestampResolutionTimestamp</code>.
     * (Schema options: { exclude: [ &#39;id&#39;, &#39;resolved&#39;, &#39;timestamp&#39;, &#39;resolutionTimestamp&#39; ] })
     * @alias module:model/EventExcludingIdResolvedTimestampResolutionTimestamp
     * @param assetId {Number} ID of Asset associated with Event
     * @param eventRuleId {Number} ID of EventRule triggered
     * @param severity {String} Event severity - Can be  LOW / MEDIUM / HIGH
     */
    constructor(assetId, eventRuleId, severity) { 
        
        EventExcludingIdResolvedTimestampResolutionTimestamp.initialize(this, assetId, eventRuleId, severity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assetId, eventRuleId, severity) { 
        obj['assetId'] = assetId;
        obj['eventRuleId'] = eventRuleId;
        obj['severity'] = severity;
    }

    /**
     * Constructs a <code>EventExcludingIdResolvedTimestampResolutionTimestamp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventExcludingIdResolvedTimestampResolutionTimestamp} obj Optional instance to populate.
     * @return {module:model/EventExcludingIdResolvedTimestampResolutionTimestamp} The populated <code>EventExcludingIdResolvedTimestampResolutionTimestamp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventExcludingIdResolvedTimestampResolutionTimestamp();

            if (data.hasOwnProperty('assetId')) {
                obj['assetId'] = ApiClient.convertToType(data['assetId'], 'Number');
            }
            if (data.hasOwnProperty('eventRuleId')) {
                obj['eventRuleId'] = ApiClient.convertToType(data['eventRuleId'], 'Number');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }


}

/**
 * ID of Asset associated with Event
 * @member {Number} assetId
 */
EventExcludingIdResolvedTimestampResolutionTimestamp.prototype['assetId'] = undefined;

/**
 * ID of EventRule triggered
 * @member {Number} eventRuleId
 */
EventExcludingIdResolvedTimestampResolutionTimestamp.prototype['eventRuleId'] = undefined;

/**
 * Event severity - Can be  LOW / MEDIUM / HIGH
 * @member {String} severity
 */
EventExcludingIdResolvedTimestampResolutionTimestamp.prototype['severity'] = undefined;

/**
 * Event description
 * @member {String} description
 */
EventExcludingIdResolvedTimestampResolutionTimestamp.prototype['description'] = undefined;






export default EventExcludingIdResolvedTimestampResolutionTimestamp;

