/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelExcludingIdDeviceId model module.
 * @module model/ChannelExcludingIdDeviceId
 * @version 3.0.1
 */
class ChannelExcludingIdDeviceId {
    /**
     * Constructs a new <code>ChannelExcludingIdDeviceId</code>.
     * (Schema options: { exclude: [ &#39;id&#39;, &#39;deviceId&#39; ] })
     * @alias module:model/ChannelExcludingIdDeviceId
     * @param monitor {Boolean} Enable channel monitoring - data recording - by setting to true
     * @param channelTypeId {Number} ID of ChannelType associated with Channel
     */
    constructor(monitor, channelTypeId) { 
        
        ChannelExcludingIdDeviceId.initialize(this, monitor, channelTypeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, monitor, channelTypeId) { 
        obj['monitor'] = monitor;
        obj['channelTypeId'] = channelTypeId;
    }

    /**
     * Constructs a <code>ChannelExcludingIdDeviceId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelExcludingIdDeviceId} obj Optional instance to populate.
     * @return {module:model/ChannelExcludingIdDeviceId} The populated <code>ChannelExcludingIdDeviceId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelExcludingIdDeviceId();

            if (data.hasOwnProperty('monitor')) {
                obj['monitor'] = ApiClient.convertToType(data['monitor'], 'Boolean');
            }
            if (data.hasOwnProperty('lastTimestamp')) {
                obj['lastTimestamp'] = ApiClient.convertToType(data['lastTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('channelTypeId')) {
                obj['channelTypeId'] = ApiClient.convertToType(data['channelTypeId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Enable channel monitoring - data recording - by setting to true
 * @member {Boolean} monitor
 */
ChannelExcludingIdDeviceId.prototype['monitor'] = undefined;

/**
 * Timestamp
 * @member {Date} lastTimestamp
 */
ChannelExcludingIdDeviceId.prototype['lastTimestamp'] = undefined;

/**
 * Channel Status
 * @member {String} status
 */
ChannelExcludingIdDeviceId.prototype['status'] = undefined;

/**
 * ID of ChannelType associated with Channel
 * @member {Number} channelTypeId
 */
ChannelExcludingIdDeviceId.prototype['channelTypeId'] = undefined;






export default ChannelExcludingIdDeviceId;

