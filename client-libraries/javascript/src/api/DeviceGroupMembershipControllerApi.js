/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DeviceGroupMembership from '../model/DeviceGroupMembership';
import DeviceGroupMembershipExcludingId from '../model/DeviceGroupMembershipExcludingId';

/**
* DeviceGroupMembershipController service.
* @module api/DeviceGroupMembershipControllerApi
* @version 3.0.1
*/
export default class DeviceGroupMembershipControllerApi {

    /**
    * Constructs a new DeviceGroupMembershipControllerApi. 
    * @alias module:api/DeviceGroupMembershipControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deviceGroupMembershipControllerCreate operation.
     * @callback module:api/DeviceGroupMembershipControllerApi~deviceGroupMembershipControllerCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviceGroupMembership} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/DeviceGroupMembershipExcludingId} opts.deviceGroupMembershipExcludingId 
     * @param {module:api/DeviceGroupMembershipControllerApi~deviceGroupMembershipControllerCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviceGroupMembership}
     */
    deviceGroupMembershipControllerCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['deviceGroupMembershipExcludingId'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeviceGroupMembership;
      return this.apiClient.callApi(
        '/device-group-memberships', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deviceGroupMembershipControllerDeleteById operation.
     * @callback module:api/DeviceGroupMembershipControllerApi~deviceGroupMembershipControllerDeleteByIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/DeviceGroupMembershipControllerApi~deviceGroupMembershipControllerDeleteByIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deviceGroupMembershipControllerDeleteById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deviceGroupMembershipControllerDeleteById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/device-group-memberships/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deviceGroupMembershipControllerFindByAssetId operation.
     * @callback module:api/DeviceGroupMembershipControllerApi~deviceGroupMembershipControllerFindByAssetIdCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DeviceGroupMembership>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} assetId 
     * @param {module:api/DeviceGroupMembershipControllerApi~deviceGroupMembershipControllerFindByAssetIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DeviceGroupMembership>}
     */
    deviceGroupMembershipControllerFindByAssetId(assetId, callback) {
      let postBody = null;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling deviceGroupMembershipControllerFindByAssetId");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DeviceGroupMembership];
      return this.apiClient.callApi(
        '/device-group-memberships/by-asset/{assetId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deviceGroupMembershipControllerFindByDeviceId operation.
     * @callback module:api/DeviceGroupMembershipControllerApi~deviceGroupMembershipControllerFindByDeviceIdCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DeviceGroupMembership>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} deviceId 
     * @param {module:api/DeviceGroupMembershipControllerApi~deviceGroupMembershipControllerFindByDeviceIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DeviceGroupMembership>}
     */
    deviceGroupMembershipControllerFindByDeviceId(deviceId, callback) {
      let postBody = null;
      // verify the required parameter 'deviceId' is set
      if (deviceId === undefined || deviceId === null) {
        throw new Error("Missing the required parameter 'deviceId' when calling deviceGroupMembershipControllerFindByDeviceId");
      }

      let pathParams = {
        'deviceId': deviceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DeviceGroupMembership];
      return this.apiClient.callApi(
        '/device-group-memberships/by-device/{deviceId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
