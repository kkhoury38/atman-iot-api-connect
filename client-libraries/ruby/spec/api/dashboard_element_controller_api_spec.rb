=begin
#Atman IoT

#Atman IoT Server

The version of the OpenAPI document: 3.0.1
Contact: k.khoury@k-ren.gr
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::DashboardElementControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DashboardElementControllerApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::DashboardElementControllerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DashboardElementControllerApi' do
    it 'should create an instance of DashboardElementControllerApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::DashboardElementControllerApi)
    end
  end

  # unit tests for dashboard_element_controller_create
  # @param [Hash] opts the optional parameters
  # @option opts [NewDashboardElement] :new_dashboard_element 
  # @return [DashboardElement]
  describe 'dashboard_element_controller_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dashboard_element_controller_delete_by_id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'dashboard_element_controller_delete_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dashboard_element_controller_find_by_user_id_asset_id_location
  # @param asset_id 
  # @param user_id 
  # @param location 
  # @param [Hash] opts the optional parameters
  # @return [Array<DashboardElementWithScope>]
  describe 'dashboard_element_controller_find_by_user_id_asset_id_location test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dashboard_element_controller_move_element_down
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'dashboard_element_controller_move_element_down test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dashboard_element_controller_move_element_up
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'dashboard_element_controller_move_element_up test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
