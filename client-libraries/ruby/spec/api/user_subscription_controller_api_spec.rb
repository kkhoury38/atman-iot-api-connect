=begin
#Atman IoT

#Atman IoT Server

The version of the OpenAPI document: 3.0.1
Contact: k.khoury@k-ren.gr
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::UserSubscriptionControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UserSubscriptionControllerApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::UserSubscriptionControllerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserSubscriptionControllerApi' do
    it 'should create an instance of UserSubscriptionControllerApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::UserSubscriptionControllerApi)
    end
  end

  # unit tests for user_subscription_controller_create
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :body 
  # @return [nil]
  describe 'user_subscription_controller_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_subscription_controller_create_user_subscription_by_sub_id
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @return [UserSubscription]
  describe 'user_subscription_controller_create_user_subscription_by_sub_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_subscription_controller_find_subscriptions_by_category
  # @param product 
  # @param [Hash] opts the optional parameters
  # @return [Array<Subscription>]
  describe 'user_subscription_controller_find_subscriptions_by_category test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_subscription_controller_get_by_refference_code
  # @param reference_code 
  # @param [Hash] opts the optional parameters
  # @return [UserSubscriptionWithRelations]
  describe 'user_subscription_controller_get_by_refference_code test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_subscription_controller_verify_code
  # @param [Hash] opts the optional parameters
  # @option opts [CodeVerificationRequest] :code_verification_request 
  # @return [UserSubscription]
  describe 'user_subscription_controller_verify_code test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
