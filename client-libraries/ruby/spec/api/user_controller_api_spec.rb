=begin
#Atman IoT

#Atman IoT Server

The version of the OpenAPI document: 3.0.1
Contact: k.khoury@k-ren.gr
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::UserControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UserControllerApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::UserControllerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserControllerApi' do
    it 'should create an instance of UserControllerApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::UserControllerApi)
    end
  end

  # unit tests for user_controller_create
  # Used for registering a new &lt;b&gt;User&lt;/b&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\&quot;/documentation.html#tocsuser\&quot; target&#x3D;\&quot;_blank\&quot;&gt;UserModel&lt;/a&gt;&lt;/i&gt;
  # @param reference_code 
  # @param [Hash] opts the optional parameters
  # @option opts [UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode] :user_excluding_id_username_is_virtual_roles_subscription_reference_code 
  # @return [User]
  describe 'user_controller_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_controller_create_virtual
  # Used for registering a new &lt;b&gt;Virtual User&lt;/b&gt; by a &lt;b&gt;User&lt;/b&gt;, identified by the provided &lt;i&gt;token.&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\&quot;/documentation.html#tocsuser\&quot; target&#x3D;\&quot;_blank\&quot;&gt;UserModel&lt;/a&gt;&lt;/i&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode] :user_excluding_id_username_is_virtual_roles_subscription_reference_code 
  # @return [User]
  describe 'user_controller_create_virtual test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_controller_delete_virtual_user_by_id
  # Deletes Virtual User by Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'user_controller_delete_virtual_user_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_controller_get_virtual_users
  # Returns users under administrator account
  # @param [Hash] opts the optional parameters
  # @return [Array<UserExcludingPasswdEmailRolesIsVirtualSubscriptionReferenceCode>]
  describe 'user_controller_get_virtual_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_controller_login
  # Used for &lt;b&gt;User&lt;/b&gt; and &lt;b&gt;Virtual User&lt;/b&gt; login. Exchanges &lt;i&gt;username/password&lt;/i&gt; with an authorization &lt;i&gt;token&lt;/i&gt;. Please enter the email provided durring registration in the username field.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\&quot;/documentation.html#tocsuser\&quot; target&#x3D;\&quot;_blank\&quot;&gt;UserModel&lt;/a&gt;&lt;/i&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode] :user_excluding_id_email_is_virtual_roles_subscription_reference_code 
  # @return [Token]
  describe 'user_controller_login test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
