// tslint:disable
/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 0.2.3
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChannelType,
    ChannelTypeFromJSON,
    ChannelTypeToJSON,
    DataFloat,
    DataFloatFromJSON,
    DataFloatToJSON,
    DataText,
    DataTextFromJSON,
    DataTextToJSON,
} from './';

/**
 * 
 * @export
 * @interface ResponseDeviceChannelData
 */
export interface ResponseDeviceChannelData  {
    /**
     * 
     * @type {ChannelType}
     * @memberof ResponseDeviceChannelData
     */
    channelType: ChannelType;
    /**
     * 
     * @type {Array<DataFloat>}
     * @memberof ResponseDeviceChannelData
     */
    dataFloat?: Array<DataFloat>;
    /**
     * 
     * @type {Array<DataText>}
     * @memberof ResponseDeviceChannelData
     */
    dataText?: Array<DataText>;
}

export function ResponseDeviceChannelDataFromJSON(json: any): ResponseDeviceChannelData {
    return {
        'channelType': ChannelTypeFromJSON(json['channelType']),
        'dataFloat': !exists(json, 'dataFloat') ? undefined : (json['dataFloat'] as Array<any>).map(DataFloatFromJSON),
        'dataText': !exists(json, 'dataText') ? undefined : (json['dataText'] as Array<any>).map(DataTextFromJSON),
    };
}

export function ResponseDeviceChannelDataToJSON(value?: ResponseDeviceChannelData): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'channelType': ChannelTypeToJSON(value.channelType),
        'dataFloat': value.dataFloat === undefined ? undefined : (value.dataFloat as Array<any>).map(DataFloatToJSON),
        'dataText': value.dataText === undefined ? undefined : (value.dataText as Array<any>).map(DataTextToJSON),
    };
}


