// tslint:disable
/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 0.2.3
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InlineResponse2001LastMeasurement,
    InlineResponse2001LastMeasurementFromJSON,
    InlineResponse2001LastMeasurementToJSON,
    InlineResponse2001UnresolvedIssueList,
    InlineResponse2001UnresolvedIssueListFromJSON,
    InlineResponse2001UnresolvedIssueListToJSON,
} from './';

/**
 * 
 * @export
 * @interface InlineResponse2001StringList
 */
export interface InlineResponse2001StringList  {
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2001StringList
     */
    stringIdentifier?: string;
    /**
     * 
     * @type {InlineResponse2001LastMeasurement}
     * @memberof InlineResponse2001StringList
     */
    lastMeasurement?: InlineResponse2001LastMeasurement;
    /**
     * 
     * @type {Array<InlineResponse2001UnresolvedIssueList>}
     * @memberof InlineResponse2001StringList
     */
    unresolvedIssueList?: Array<InlineResponse2001UnresolvedIssueList>;
}

export function InlineResponse2001StringListFromJSON(json: any): InlineResponse2001StringList {
    return {
        'stringIdentifier': !exists(json, 'String_Identifier') ? undefined : json['String_Identifier'],
        'lastMeasurement': !exists(json, 'LastMeasurement') ? undefined : InlineResponse2001LastMeasurementFromJSON(json['LastMeasurement']),
        'unresolvedIssueList': !exists(json, 'UnresolvedIssueList') ? undefined : (json['UnresolvedIssueList'] as Array<any>).map(InlineResponse2001UnresolvedIssueListFromJSON),
    };
}

export function InlineResponse2001StringListToJSON(value?: InlineResponse2001StringList): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'String_Identifier': value.stringIdentifier,
        'LastMeasurement': InlineResponse2001LastMeasurementToJSON(value.lastMeasurement),
        'UnresolvedIssueList': value.unresolvedIssueList === undefined ? undefined : (value.unresolvedIssueList as Array<any>).map(InlineResponse2001UnresolvedIssueListToJSON),
    };
}


