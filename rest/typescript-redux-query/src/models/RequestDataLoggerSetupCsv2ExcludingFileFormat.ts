// tslint:disable
/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 0.2.3
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RequestDataLoggerSetupCsv2Data,
    RequestDataLoggerSetupCsv2DataFromJSON,
    RequestDataLoggerSetupCsv2DataToJSON,
    RequestDataLoggerSetupCsv2TimeData,
    RequestDataLoggerSetupCsv2TimeDataFromJSON,
    RequestDataLoggerSetupCsv2TimeDataToJSON,
} from './';

/**
 * (Schema options: { exclude: [ \'fileFormat\' ] })
 * @export
 * @interface RequestDataLoggerSetupCsv2ExcludingFileFormat
 */
export interface RequestDataLoggerSetupCsv2ExcludingFileFormat  {
    /**
     * Delimiter used in CSV file
     * @type {string}
     * @memberof RequestDataLoggerSetupCsv2ExcludingFileFormat
     */
    delimiter: string;
    /**
     * Decimal Point of values in CSV file
     * @type {string}
     * @memberof RequestDataLoggerSetupCsv2ExcludingFileFormat
     */
    decimalPoint: string;
    /**
     * 
     * @type {RequestDataLoggerSetupCsv2TimeData}
     * @memberof RequestDataLoggerSetupCsv2ExcludingFileFormat
     */
    timeData: RequestDataLoggerSetupCsv2TimeData;
    /**
     * 
     * @type {RequestDataLoggerSetupCsv2Data}
     * @memberof RequestDataLoggerSetupCsv2ExcludingFileFormat
     */
    data: RequestDataLoggerSetupCsv2Data;
    /**
     * Provided Configuration Confirmation. Set to true to save current configuration
     * @type {boolean}
     * @memberof RequestDataLoggerSetupCsv2ExcludingFileFormat
     */
    confirm: boolean;
}

export function RequestDataLoggerSetupCsv2ExcludingFileFormatFromJSON(json: any): RequestDataLoggerSetupCsv2ExcludingFileFormat {
    return {
        'delimiter': json['delimiter'],
        'decimalPoint': json['decimalPoint'],
        'timeData': RequestDataLoggerSetupCsv2TimeDataFromJSON(json['timeData']),
        'data': RequestDataLoggerSetupCsv2DataFromJSON(json['data']),
        'confirm': json['confirm'],
    };
}

export function RequestDataLoggerSetupCsv2ExcludingFileFormatToJSON(value?: RequestDataLoggerSetupCsv2ExcludingFileFormat): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'delimiter': value.delimiter,
        'decimalPoint': value.decimalPoint,
        'timeData': RequestDataLoggerSetupCsv2TimeDataToJSON(value.timeData),
        'data': RequestDataLoggerSetupCsv2DataToJSON(value.data),
        'confirm': value.confirm,
    };
}


