// tslint:disable
/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 0.2.3
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RequestDataLoggerSetupCsv2LocationSpec,
    RequestDataLoggerSetupCsv2LocationSpecFromJSON,
    RequestDataLoggerSetupCsv2LocationSpecToJSON,
} from './';

/**
 * (Schema options: { exclude: [ \'fileFormat\' ] })
 * @export
 * @interface RequestDataLoggerSetupCsv2TimeData
 */
export interface RequestDataLoggerSetupCsv2TimeData  {
    /**
     * Column containing time data
     * @type {number}
     * @memberof RequestDataLoggerSetupCsv2TimeData
     */
    column: number;
    /**
     * Row containing first value of time data in the CSV file
     * @type {number}
     * @memberof RequestDataLoggerSetupCsv2TimeData
     */
    firstItemRow: number;
    /**
     * Relevant row location of next item
     * @type {number}
     * @memberof RequestDataLoggerSetupCsv2TimeData
     */
    nextItemIteration: number;
    /**
     * 
     * @type {RequestDataLoggerSetupCsv2LocationSpec}
     * @memberof RequestDataLoggerSetupCsv2TimeData
     */
    timezone: RequestDataLoggerSetupCsv2LocationSpec;
    /**
     * 
     * @type {RequestDataLoggerSetupCsv2LocationSpec}
     * @memberof RequestDataLoggerSetupCsv2TimeData
     */
    format: RequestDataLoggerSetupCsv2LocationSpec;
}

export function RequestDataLoggerSetupCsv2TimeDataFromJSON(json: any): RequestDataLoggerSetupCsv2TimeData {
    return {
        'column': json['column'],
        'firstItemRow': json['firstItemRow'],
        'nextItemIteration': json['nextItemIteration'],
        'timezone': RequestDataLoggerSetupCsv2LocationSpecFromJSON(json['timezone']),
        'format': RequestDataLoggerSetupCsv2LocationSpecFromJSON(json['format']),
    };
}

export function RequestDataLoggerSetupCsv2TimeDataToJSON(value?: RequestDataLoggerSetupCsv2TimeData): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'column': value.column,
        'firstItemRow': value.firstItemRow,
        'nextItemIteration': value.nextItemIteration,
        'timezone': RequestDataLoggerSetupCsv2LocationSpecToJSON(value.timezone),
        'format': RequestDataLoggerSetupCsv2LocationSpecToJSON(value.format),
    };
}


