// tslint:disable
/**
 * Atman IoT
 * Atman IoT Server
 *
 * The version of the OpenAPI document: 0.2.3
 * Contact: k.khoury@k-ren.gr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InlineResponse2001StringList,
    InlineResponse2001StringListFromJSON,
    InlineResponse2001StringListToJSON,
    InlineResponse2001UnresolvedIssueList,
    InlineResponse2001UnresolvedIssueListFromJSON,
    InlineResponse2001UnresolvedIssueListToJSON,
} from './';

/**
 * 
 * @export
 * @interface InlineResponse2001InverterList
 */
export interface InlineResponse2001InverterList  {
    /**
     * 
     * @type {number}
     * @memberof InlineResponse2001InverterList
     */
    inverterID?: number;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2001InverterList
     */
    inverterSN?: string;
    /**
     * 
     * @type {Array<InlineResponse2001StringList>}
     * @memberof InlineResponse2001InverterList
     */
    stringList?: Array<InlineResponse2001StringList>;
    /**
     * 
     * @type {Array<InlineResponse2001UnresolvedIssueList>}
     * @memberof InlineResponse2001InverterList
     */
    unresolvedIssueList?: Array<InlineResponse2001UnresolvedIssueList>;
}

export function InlineResponse2001InverterListFromJSON(json: any): InlineResponse2001InverterList {
    return {
        'inverterID': !exists(json, 'InverterID') ? undefined : json['InverterID'],
        'inverterSN': !exists(json, 'InverterSN') ? undefined : json['InverterSN'],
        'stringList': !exists(json, 'StringList') ? undefined : (json['StringList'] as Array<any>).map(InlineResponse2001StringListFromJSON),
        'unresolvedIssueList': !exists(json, 'UnresolvedIssueList') ? undefined : (json['UnresolvedIssueList'] as Array<any>).map(InlineResponse2001UnresolvedIssueListFromJSON),
    };
}

export function InlineResponse2001InverterListToJSON(value?: InlineResponse2001InverterList): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'InverterID': value.inverterID,
        'InverterSN': value.inverterSN,
        'StringList': value.stringList === undefined ? undefined : (value.stringList as Array<any>).map(InlineResponse2001StringListToJSON),
        'UnresolvedIssueList': value.unresolvedIssueList === undefined ? undefined : (value.unresolvedIssueList as Array<any>).map(InlineResponse2001UnresolvedIssueListToJSON),
    };
}


